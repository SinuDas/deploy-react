{"version":3,"sources":["http-common.js","services/tutorial.service.js","components/add-tutorial.component.js","components/showdata.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","data","post","AddTutorial","props","onChangedob","bind","onChangeName","saveTutorial","newTutorial","OnChangeclasses","OnChangedivision","OnChangegender","refreshPage","Componentfetchdata","state","studentdata","id","name","dob","classes","division","gender","e","this","setState","target","value","console","log","match","TutorialDataService","then","response","submitted","catch","hasError","hasdd","hasee","window","location","reload","getAll","document","getElementById","style","display","className","htmlFor","type","autocomplete","required","onChange","pattern","onClick","colSpan","map","student","Component","ListData","pros","App","to","exact","path","component","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.56520209.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass TutorialDataService {\r\n  getAll() {\r\n    return http.get(\"/StudentDatas\");\r\n  }\r\n  create(data) {\r\n    return http.post(\"/StudentDatas\", data);\r\n  }\r\n}\r\nexport default new TutorialDataService();","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\nimport \"../App\";\r\nimport { data } from \"jquery\";\r\nexport default class AddTutorial extends Component {  \r\nconstructor(props) {\r\n    super(props);    \r\n    this.onChangedob = this.onChangedob.bind(this);\r\n    this.onChangeName=this.onChangeName.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    this.OnChangeclasses =this.OnChangeclasses.bind(this);\r\n    this.OnChangedivision=this.OnChangedivision.bind(this);\r\n    this.OnChangegender=this.OnChangegender.bind(this);\r\n    this.refreshPage=this.refreshPage.bind(this); \r\n    this.Componentfetchdata=this.Componentfetchdata.bind(this);\r\n\r\n\r\n    this.state = {\r\n      studentdata:[],\r\n     id:null,\r\n      name:\"\", \r\n      dob:\"\",\r\n      classes:\"\",\r\n      division:\"\",\r\n      gender:\"\",\r\n      gender:\"\",\r\n      hasError:false,\r\n      hasdd:false,\r\n      hasee:false,\r\n      hassubmit:false,\r\n      submission:true,\r\n      submitted: false,\r\n  };\r\n}\r\nonChangeName(e){\r\n  this.setState({\r\n    name: e.target.value\r\n  }); \r\n}      \r\nOnChangeclasses(e){\r\n  this.setState({\r\n    classes:e.target.value\r\n  })\r\n}\r\nOnChangedivision(e){\r\n  this.setState({\r\n    division:e.target.value\r\n  })\r\n}\r\nonChangedob(e) {\r\n  this.setState({\r\n    dob: e.target.value\r\n    });\r\n}\r\nOnChangegender(e) {\r\n  this.setState({\r\n    gender: e.target.value\r\n  });\r\n} \r\nsaveTutorial() {\r\n  console.log(this.state)\r\n  var data = {\r\n      name: this.state.name,\r\n      dob: this.state.dob,\r\n      classes:this.state.classes,\r\n      division:this.state.division,\r\n      gender:this.state.gender\r\n  };\r\n  if(this.state.name.match(/^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/)){\r\n      TutorialDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          dob: response.data.dob,\r\n          classes:response.data.classes,\r\n          division:response.data.division,\r\n          gender:response.data.gender,          \r\n          submitted: true,                    \r\n        }); \r\n        \r\n        \r\n      console.log(response.data)     \r\n      })    \r\n      .catch(e=> {\r\n\r\n      console.log(e);       \r\n      });\r\n      this.setState({hasError:false});\r\n      this.setState({hasdd:true}); \r\n      this.setState({hasee:false});\r\n\r\n      \r\n    }else{    \r\n      this.setState({hasError:true});\r\n      this.setState({hasdd:false});\r\n      this.setState({hasee:true});\r\n\r\n      window.location.reload();    \r\n\r\n    }\r\n}\r\n\r\n\r\nrefreshPage() {\r\n  // window.location.reload(false);\r\n}\r\nComponentfetchdata(){\r\n  TutorialDataService.getAll()\r\n  .then(response => {\r\n  this.setState({\r\n    studentdata: response.data,\r\n  });\r\n  console.log(response.data);\r\n})\r\n.catch(e => {\r\n  console.log(e);\r\n});\r\ndocument.getElementById(\"data\").style.display = \"block\";\r\n}\r\nnewTutorial() {\r\n  this.setState({\r\n  id: null,\r\n  name: \"\",\r\n  dob: \"\",\r\n  classes:\"\",\r\n  division:\"\",\r\n  gender:\"\",\r\n  submitted:false \r\n  });\r\n}      \r\nrender() {\r\nreturn (\r\n<div className=\"container\">\r\n  <div className=\"row\">\r\n     <div className=\"col-sm-4 form\">   \r\n     <div></div>     \r\n        <div className=\"submit-form\">     \r\n           <div>\r\n           {this.state.hasee && <span><h5 className=\"errors\">Data Not Saved Successfully</h5></span>}\r\n           {this.state.hasdd && <span><h5 className=\"errors\">Data Submitted Successfully</h5></span>}\r\n          \r\n            <div className=\"form-group\">\r\n            {this.state.hasError && <span><p className=\"error\">Invalid Data Entered</p></span>}\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"myInput\" name=\"name\" autocomplete=\"off\" required\r\n                  value={this.state.name}\r\n                  onChange={this.onChangeName}/>\r\n                  {this.state.hasError && <span><p className=\"error\">Error Only Characters Accepted</p></span>}\r\n            </div>  \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"dob\">Date of Birth</label>\r\n              <input type=\"date\" className=\"form-control\" id=\"myInput\" name=\"dob\" autocomplete=\"off\" required\r\n                   value={this.state.dob} pattern=\"[a-zA-Z0-9\\s]+\"\r\n                   onChange={this.onChangedob}/>\r\n            </div>            \r\n            <div className=\"form-group\">\r\n               <label htmlFor=\"class\">Class</label>\r\n               <select value={this.state.classes} onChange={this.OnChangeclasses}name=\"classes\" id=\"myInput\" className=\"sidv\" autocomplete=\"off\">             \r\n               <option value=\"1\">1</option>\r\n               <option value=\"11\">11</option>\r\n               <option value=\"111\">111</option>\r\n               <option value=\"IV\">IV</option>\r\n               <option value=\"V\">V</option>\r\n               <option value=\"V1\">V1</option>\r\n               <option value=\"V11\">V11</option>\r\n               <option value=\"V111\">V111</option>\r\n               <option value=\"IX\">IX</option>\r\n               <option value=\"X\">X</option>\r\n               <option value=\"X1\">X1</option>\r\n               <option value=\"X11\">X11</option>\r\n               </select> \r\n               <label htmlFor=\"class\" className=\"sidv\">Division</label>\r\n               <select id=\"division\" name=\"division\" onChange={this.OnChangedivision} value={this.state.division} className=\"sidv\" autocomplete=\"off\">\r\n               <option value=\"A\">A</option>\r\n               <option value=\"B\">B</option>\r\n               <option value=\"C\">C</option>\r\n               </select>\r\n            </div>              \r\n            <div className=\"form-group\">  \r\n              <div id=\"gender\" name=\"gender\" onChange={this.OnChangegender} value={this.state.gender}>\r\n              <input type=\"radio\"name=\"gender\" value=\"Male\"/>Male\r\n              <input type=\"radio\" name=\"gender\" value=\"Female\" className=\"sidv\"/>Female             \r\n              </div>\r\n            </div>  \r\n        <button onClick={()=> {this.saveTutorial();this.refreshPage();}} className=\"btn btn-success\" >Submit</button>\r\n        <button onClick={this.Componentfetchdata} className=\"btn btn-success sidv\">View</button> \r\n       </div>        \r\n      </div>\r\n    </div>\r\n    <div className=\"col-sm-8\">      \r\n       <table className=\"table data liDa\" id=\"data\">\r\n          <thead>\r\n              <tr><th colSpan=\"7\" className=\"desc\">STUDENT DETAILS</th></tr>\r\n              <tr>               \r\n                <th>Roll Number</th>\r\n                <th>Name</th>\r\n                <th>Date of Birth</th>\r\n                <th>Class</th>\r\n                <th>Division</th>\r\n                <th>Gender</th>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n          {this.state.studentdata.map(student=>\r\n              <tr>             \r\n                <td>{student.id}</td>\r\n                <td>{student.name}</td>\r\n                <td>{student.dob}</td>\r\n                <td>{student.classes}</td>\r\n                <td>{student.division}</td>\r\n                <td>{student.gender}</td>            \r\n              </tr>\r\n          )}\r\n          </tbody>                                   \r\n        </table>\r\n    </div>\r\n  </div>\r\n</div>   \r\n)}\r\n}","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport AddTutorial from\"../components/showdata\";\r\nexport default class ListData extends Component{\r\n     constructor(pros){\r\n         super(pros)\r\n         this.Componentfetchdata=this.Componentfetchdata.bind(this);     \r\n    this.state={\r\n        studentdata:[],\r\n    }\r\n}\r\n    Componentfetchdata(){\r\n      TutorialDataService.getAll()\r\n      .then(response => {\r\n      this.setState({\r\n      studentdata: response.data,\r\n      });\r\n      console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n      console.log(e);\r\n      });\r\n      document.getElementById(\"data\").style.display = \"block\";\r\n    }\r\n    render() {\r\n        return (          \r\n            <div>\r\n                 <button onClick={this.Componentfetchdata} className=\"btn btn-success\">ShowStudentData</button>  \r\n                 <div className=\"container\">\r\n                 <div className=\"row\">\r\n                 <div className=\"col-sm-12\">              \r\n                 <table className=\"table data liDa\" id=\"data\">\r\n          <thead>\r\n              <tr><th colSpan=\"7\" className=\"desc\">STUDENT DETAILS</th></tr>\r\n              <tr>               \r\n                <th>Roll Number</th>\r\n                <th>Name</th>\r\n                <th>Date of Birth</th>\r\n                <th>Class</th>\r\n                <th>Division</th>\r\n                <th>Gender</th>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n          {this.state.studentdata.map(student=>\r\n              <tr>             \r\n                <td>{student.id}</td>\r\n                <td>{student.name}</td>\r\n                <td>{student.dob}</td>\r\n                <td>{student.classes}</td>\r\n                <td>{student.division}</td>\r\n                <td>{student.gender}</td>            \r\n              </tr>\r\n          )}\r\n          </tbody>                                   \r\n        </table>\r\n        </div>\r\n        </div>\r\n        </div>\r\n</div>\r\n        );\r\n      }   \r\n}  ","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport \"./App.css\";\nimport \"./index\";\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport ListData from \"./components/showdata\";\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <header><h3 className=\"title\">STUDENT DETAILS [ADD & SHOW]</h3></header>          \n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n                <Link to={\"/\"} className=\"nav-link\">HOME</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/add\"} className=\"nav-link\">ADD DATA</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/list\"} className=\"nav-link\" >LIST DATA</Link>\n              </li> \n            </div>\n          </nav>\n           <div>\n             <Switch>              \n               <Route exact path=\"/add\" component={AddTutorial} /> \n                <Route exact path=\"/list\" component={ListData} />               \n            </Switch> \n          </div> \n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <BrowserRouter>\n  \n    <App />\n\n  </BrowserRouter>,\n  document.getElementById('root')\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}